version: 2.1

workflows:
  version: 2

  build_and_test:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build

jobs:
  build:
    executor: docker-centos7
    steps:
      - init_ci_job
      - run: scripts/install-system-deps.sh
      - install_stack
      - with_stack_cache:
          steps:
            - run: scripts/install-stack-deps.sh
      - run: stack build --test --no-run-tests
      - upload_artifacts
      - persist_to_workspace:
          root: .
          paths:
            - .stack-work
            - github-schemas/.stack-work
            - merge-bot/.stack-work
            - merge-bot-core/.stack-work
            - servant-github-app/.stack-work

  lint:
    executor: docker-centos7
    steps:
      - init_ci_job
      - install_stack
      - with_stack_cache:
          steps:
            - run: scripts/hlint.sh
            - run: scripts/stylish-haskell.sh

  test:
    executor: docker-centos7
    steps:
      - init_ci_job
      - install_stack
      - with_stack_cache:
          steps:
            - run: stack test

executors:
  docker-centos7:
    docker:
      - image: centos:7
    working_directory: /root/src
    environment:
      LANG: en_US.UTF-8

commands:
  init_ci_job:
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build cache key
          command: |
            FILES=(
              stack.yaml
              hpack.yaml
              github-schemas/package.yaml
              merge-bot/package.yaml
              merge-bot-core/package.yaml
              servant-github-app/package.yaml
              scripts/install-stack-deps.sh
            )
            cat "${FILES[@]}" > cache-key.txt
            curl -sSL https://get.haskellstack.org/ | sed -n 's/^STACK_VERSION="\(.*\)"/\1/p' >> cache-key.txt

  install_stack:
    steps:
      - run:
          name: Install stack
          command: |
            curl -sSL https://get.haskellstack.org/ | sh
            stack --version

  with_stack_cache:
    parameters:
      steps:
        type: steps
    steps:
      - restore_cache:
          key: v1-{{ checksum "cache-key.txt" }}
      - << parameters.steps >>
      - save_cache:
          key: v1-{{ checksum "cache-key.txt" }}
          paths:
            - ~/.stack

  upload_artifacts:
    steps:
      - run:
          name: Collect artifacts
          command: |
            mkdir -p artifacts/
            cp -v "$(stack exec -- bash -c 'type -P merge-bot')" artifacts/
      - store_artifacts:
          path: artifacts/
